rm(list = ls())

data  <- read.csv("/home/mustafa/Desktop/docs.data",header = FALSE,stringsAsFactors = FALSE, sep = " ")
train_data <- data$V1
test_data  <- data$V2

train_data <- paste(train_data, collapse = '')
test_data  <- paste(test_data, collapse = '')

test_data  <- strsplit(test_data, "_")
train_data <- strsplit(train_data, "_")


harf_sayısı <- length(letters)

pi <- matrix(0,nrow = 1,ncol = harf_sayısı)
pi <- as.data.frame(pi)
colnames(pi) <- letters


a <- matrix(0,nrow = harf_sayısı,ncol = harf_sayısı)
a <- as.data.frame(a)
colnames(a) <- letters
rownames(a) <- letters

b <- matrix(0, nrow = harf_sayısı, ncol = harf_sayısı)
b <- as.data.frame(b)
colnames(b) <- letters
rownames(b) <- letters


for(i in 1:length(train_data[[1]])){
    
    kelime        <- strsplit(gsub("\\s+", "", train_data[[1]][i]), '')[[1]] 
    kelime_test   <- strsplit(gsub("\\s+", "", test_data [[1]][i]), '')[[1]] 
    pi[kelime[1]] <- pi[kelime[1]] + 1
    
    if(length(kelime) > 1){
        for(j in 1:(length(kelime) - 1)){
            a[kelime[j],kelime[j + 1]]  <- a[kelime[j], kelime[j + 1 ]] + 1 
            b[kelime[j],kelime_test[j]] <- b[kelime[j], kelime_test[j]] + 1
        }
        j < j + 1
        b[kelime[j], kelime_test[j]] <- b[kelime[j], kelime_test[j]] + 1	 
    }  
}


pi <- pi / sum(pi)
for(i in 1:length(a)){
    a[i,] <- a[i,] / sum(a[i,])
    b[i,] <- b[i,] / sum(b[i,])
}





a  <- as.matrix(a)
b  <- as.matrix(b)
pi <- as.matrix(pi)

for(k in 1:length(test_data[[1]])){
    
    o               <- strsplit(gsub("\\s+", "", test_data[[1]][k]), '')[[1]]
    print(paste(strsplit(gsub("\\s+", "", train_data[[1]][k]), '')[[1]]))
    print(paste(o))
    sigma           <- matrix(0,nrow = length(o),ncol = harf_sayısı)
    colnames(sigma) <- letters	
    sembol          <- letters
    if(length(o) > 1){
        
        for(i in 1:length(pi)){
            sigma[1,sembol[i]] <- pi[1,sembol[i]] * b[o[1],sembol[i]]
        }
        
        
        for(i in 2:length(o)){
            for(j in 1:length(sembol)){
                max <- 0
                for(k in 1:length((sembol))){
                    gecici <- sigma[i - 1 , sembol[k]] *  a[k , sembol[j]]
                    if(gecici > max){
                        max    <- gecici
                    }
                } 
                sigma[i,sembol[j]] <- max * b[o[i] , sembol[j]]
            }
        }
        path <- c()
        for(i in 1:length(o)){
            path       <- c(path, names(sigma[i,])[sigma[i,] == max(sigma[i,])][1])
        }
        print(paste(path))
        print(paste(""))
    }
}
